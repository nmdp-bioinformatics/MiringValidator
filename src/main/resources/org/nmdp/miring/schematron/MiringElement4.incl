<?xml version="1.0" encoding="utf-8"?>
<!-- 

    MiringValidator  Semantic Validator for MIRING compliant HML
    Copyright (c) 2015 National Marrow Donor Program (NMDP)

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 3 of the License, or (at
    your option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; with out even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library;  if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.

    > http://www.gnu.org/licenses/lgpl.html

 -->


<pattern id="Miring.Element.4" xmlns="http://purl.oclc.org/dsdl/schematron">

    <!--
        Rule 4.a and 4.b
        end >= start
      --> 
    <rule context="hml:sequence-quality">
    
        <let name="csbStart" value="parent::*/@start" />
        <let name="csbEnd" value="parent::*/@end" />
        <let name="csbRange" value="$csbEnd - $csbStart" />
        
        <report test="boolean(@sequence-start) and boolean(@sequence-end) and (number(@sequence-start) >= number(@sequence-end))">On a sequence quality node, sequence-end must be greater than sequence-start.</report>
        <assert test="@sequence-start &lt;= $csbRange">On a sequence quality node, the sequence-start and sequence-end attributes must be between 0 and (consensus-sequence-block:end - consensus-sequence-block:start) inclusive.</assert>
        <assert test="@sequence-end &lt;= $csbRange">On a sequence quality node, the sequence-start and sequence-end attributes must be between 0 and (consensus-sequence-block:end - consensus-sequence-block:start) inclusive.</assert>
    </rule>
    
    <!--
        Rule 4.2.3.b
        end >= start
      --> 
    <rule context="hml:consensus-sequence-block">
        <report test="boolean(@start) and boolean(@end) and (number(@start) > number(@end))">On a consensus-sequence-block node, end attribute should be greater than or equal to the start attribute.</report>

    <!--
        Rule 4.2.3.d
        CSB:start >= refseq:start && CSB:end <= refseq:end
        I get the CSB information, then assert that there is a reference sequence with "start<csbStart" and "end>=csbEnd"  (with matching ID)
      -->
        <let name="csbRefSeqId" value="attribute(reference-sequence-id)" />
        <let name="csbStart" value="attribute(start)" />
        <let name="csbEnd" value="attribute(end)" />

        <assert test="//hml:reference-sequence[@id = $csbRefSeqId and @start &lt;= $csbStart]">The start attribute on a consensus-sequence-block node should be greater than or equal to the start attribute on the corresponding reference-sequence node.</assert>
        <assert test="//hml:reference-sequence[@id = $csbRefSeqId and @end &gt;= $csbEnd]">The end attribute on a consensus-sequence-block node should be less than or equal to the end attribute on the corresponding reference-sequence node.</assert>

    <!--
        Rule 4.2.4.b
        Phasing-group attribute is deprecated.
      -->
        <report test="@phasing-group">On a consensus-sequence-block node, the phasing-group attribute is deprecated.</report>

    <!--
    Rule 4.2.7.b
     -->
        <let name="csbCont" value="attribute(continuity)" />
        <let name="csbStart" value="attribute(start)" />
        <let name="csbRefSeqID" value="attribute(reference-sequence-id)" />
        <let name="csbPhaseSet" value="attribute(phase-set)" />
        <let name="csbPreviousEnd" value="preceding-sibling::*[@reference-sequence-id=$csbRefSeqID and @phase-set=$csbPhaseSet][1]/@end" />
        <report test="$csbCont='true' and $csbStart!=$csbPreviousEnd and $csbPreviousEnd!='' ">A consensus-sequence-block with attribute continuity=true does not appear to be continuous with it's previous sibling consensus-sequence-block node, matched by reference-sequence-id and phase-set.</report>
    </rule>

    <!--
        Rule 4.2.3.e
        Length of sequence node text (trimmed) should be = end-start.
        There are sequence nodes elsewhere in HML.  Only want the children of CSBs
      -->
    <rule context="//hml:consensus-sequence-block/hml:sequence">
        <let name="seq" value="replace(normalize-space(.),' ','')" />
        <let name="seqLength" value="string-length($seq)" />
        <assert test="..[@end - @start = $seqLength]">For every consensus-sequence-block node, the child sequence node must have a length of (end - start).</assert>
    </rule>

</pattern>